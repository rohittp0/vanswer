version: '3.5'

services:
  etcd:
    container_name: etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    depends_on:
      - "etcd"
      - "minio"
    restart: unless-stopped

  attu:
    container_name: milvus-attu
    image: zilliz/attu:latest
    ports:
      - "9090:3000"
    environment:
      MILVUS_URL: "http://milvus:19530"
    depends_on:
      - "milvus"

  fastapi-app:
    container_name: fastapi-app
    image: rohittp0/vanswer-vector
    environment:
      MILVUS_HOST: "milvus"
      MILVUS_PORT: "19530"
    volumes:
      - ./vector:/usr/src/app
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/pip-cache:/root/.cache/pip
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/hf-models:/root/.cache/huggingface
    depends_on:
      - "milvus"
    restart: unless-stopped

  db:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    container_name: server
    image: rohittp0/vanswer-server
    environment:
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      VECTOR_API_URL: "http://fastapi-app:4000"
      DJANGO_KEY: ${DJANGO_KEY}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DEBUG: ${DEBUG}
      HOST: ${HOST}
    ports:
      - "8000:8000"
    volumes:
      - ./server:/usr/src/app
      - ${STATIC_ROOT}:/usr/src/app/staticfiles
      - ${MEDIA_ROOT}:/usr/src/app/media
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/pip-cache:/root/.cache/pip
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/hf-models:/root/.cache/huggingface
    depends_on:
      fastapi-app:
        condition: service_started
      db:
        condition: service_healthy
    restart: unless-stopped

networks:
  default:
    name: milvus
